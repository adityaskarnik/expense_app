version: '2.3'
services:
  expense_app:
    build:
      context: .
      dockerfile: Dockerfile
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8100"
    volumes:
      - .:/app
      - /root/db/:/root/db/
    ports:
      - "8100:8100"
    environment:
      BUDGET_PASSWORD: "${BUDGET_PASSWORD}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      ELASTIC_PASSWORD: "${ELASTIC_PASSWORD}"
    depends_on:
      - expense_worker
      - elasticsearch
    container_name: expense_app
    networks:
      expense_network:
        ipv4_address: "10.10.10.2"
    restart:
      always

  expense_worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: bash -c "celery worker -A payee_name -l INFO --beat --concurrency=1 -n 'main_app'"
    volumes:
      - .:/app
    ports:
      - "8200:8200"
    environment:
      BUDGET_PASSWORD: "${BUDGET_PASSWORD}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      ELASTIC_PASSWORD: "${ELASTIC_PASSWORD}"
    links:
      - rabbitmq
    depends_on:
      - rabbitmq
      - elasticsearch
    container_name: expense_worker
    networks:
      expense_network:
        ipv4_address: "10.10.10.3"
    restart:
      always

  expense_db:
    image: "postgres"
    container_name: expense_db
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_HOST: "expense_host"
      POSTGRES_PORT: "5432"
      POSTGRES_USER: "expense"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "Expenses"
      PG_DATA: "/var/lib/postgresql/data"
    volumes:
      - /var/lib/postgresql/data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
    networks:
      expense_network:
        ipv4_address: "10.10.10.4"
  
  rabbitmq:
    image: "rabbitmq:3-management"
    hostname: "rabbitmq"
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - '5672:5672'
      - '15672:15672'
    labels:
      NAME: "rabbitmq"
    container_name: rabbitmq
    volumes:
      - 'expense_elk_data:/bitnami'
    networks:
      expense_network:
        ipv4_address: "10.10.10.5"
    restart:
      always

  elasticsearch:
    build:
      context: ../expense_elk/elasticsearch/
      args:
        ELK_VERSION: 7.0.1
    volumes:
      - ../expense_elk/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - /etc/timezone:/etc/timezone
      - ../expense_elk/elasticsearch/data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx2560m -Xms2560m"
      ELASTIC_PASSWORD: "${ELASTIC_PASSWORD}"
      http.cors.enabled: "true"
      http.cors.allow-origin: "*"
    container_name: elasticsearch
    networks:
      expense_network:
        ipv4_address: "10.10.10.6"
    restart:
      always

  kibana:
    build:
      context: ../expense_elk/kibana/
      args:
        ELK_VERSION: 7.0.1
    volumes:
      - ../expense_elk/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
      - /etc/timezone:/etc/timezone
    ports:
      - "5601:5601"
    networks:
      expense_network:
        ipv4_address: "10.10.10.7"
    container_name: kibana
    depends_on:
      - elasticsearch
    restart:
      always

  
volumes:
  expense_elk_data:
    external: true
  
networks:
  expense_network:
    driver: overlay
    ipam:
      config:
        - subnet: 10.10.10.0/16
          gateway: 10.10.10.1